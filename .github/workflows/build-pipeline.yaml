name: ci-cd-pipeline
on:
  push:
    branches:
      - main
jobs:
  run-test-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: npm test
  build-image:
    needs: run-test-code
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: create Auth_env file
        working-directory: ./apps/auth
        run: |
          touch .env
          cat << EOF >> .env
          ${{ secrets.Auth_ENV }}

      - name: create Billing_env file
        working-directory: ./apps/billing
        run: |
          touch .env
          cat << EOF >> .env
          ${{ secrets.Billing_ENV }}

      - name: create Orders_env file
        working-directory: ./apps/orders
        run: |
          touch .env
          cat << EOF >> .env
          ${{ secrets.Orders_ENV }}

      - name: Build news-app and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/news-app:version1
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  cd-pipeline:
    needs: build-image
    name: continuos deploy
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@master
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          source: 'docker-compose.yml'
          target: '/home/ubuntu/'
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: 'docker-compose pull && docker-compose up -d'
